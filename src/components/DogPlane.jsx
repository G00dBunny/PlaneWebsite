/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";


const HELICESPEED = 8

export function DogPlane(props) {
    const { nodes, materials } = useGLTF("assets/PlaneDog.glb");

    const heliceMvt = useRef()

    useFrame((_state, delta)=>
    {
        heliceMvt.current.rotation.x += delta * HELICESPEED
    })
    return (
        <group {...props} dispose={null}>
        <group position={[-0.038, 0.03, -0.009]}>
            <mesh
            castShadow
            receiveShadow
            geometry={nodes["Node-Mesh001"].geometry}
            material={materials["mat7.002"]}
            >
                <meshStandardMaterial color="white" />

            </ mesh>


            <mesh
            castShadow
            receiveShadow
            geometry={nodes["Node-Mesh001_1"].geometry}
            material={materials["mat23.002"]}
            >
                {/* <meshStandardMaterial color="white" /> */}

            </ mesh>

            <mesh
            castShadow
            receiveShadow
            geometry={nodes["Node-Mesh001_2"].geometry}
            material={materials["mat21.002"]}
            >
                <meshStandardMaterial color="white" />

            </ mesh>



            <mesh
            castShadow
            receiveShadow
            geometry={nodes["Node-Mesh001_3"].geometry}
            material={materials["mat19.002"]}
            >
                {/* <meshStandardMaterial color="white" /> */}

            </ mesh>

        </group>
            <mesh
            ref={heliceMvt}
            castShadow
            receiveShadow
            geometry={nodes.helice.geometry}
            material={nodes.helice.material}
            position={[0.142, -0.389, 0.08]}
            >
                <meshStandardMaterial color="white" />

            </ mesh>

        </group>
    );
}

useGLTF.preload("assets/PlaneDog.glb");